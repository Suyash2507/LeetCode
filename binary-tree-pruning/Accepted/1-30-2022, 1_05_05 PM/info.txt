{"id":630781213,"lang":"java","time":"6 months, 3 weeks","timestamp":1643528105,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/630781213/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"40 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode pruneTree(TreeNode root) {\n        if(root==null)  return null;\n        root.left = pruneTree(root.left);\n        root.right = pruneTree(root.right);\n        if (root.left == null && root.right == null && root.val == 0) return null;\n        return root;\n    } \n}","compare_result":"111111111111111111111111111111","title_slug":"binary-tree-pruning"}