{"id":623259008,"lang":"java","time":"7Â months","timestamp":1642601488,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/623259008/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"N/A","code":"class MyStack {\n    Queue<Integer> q;\n    int top;\n    public MyStack() {\n        q=new LinkedList<Integer>();\n    }\n    \n    public void push(int x) {\n        q.add(x);\n        top = x;\n    }\n    \n    public int pop() {\n        Queue<Integer> temp= new LinkedList<Integer>();\n        while(q.size()>1){\n            int a= q.remove();\n            temp.add(a);\n        }\n        int b = q.remove();\n        q = temp;\n        return b;  \n    }\n    \n    public int top() {\n        return top;  \n    }\n    \n    public boolean empty() {\n        if(q==null)\n            return true;\n        else\n            return false;\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */","compare_result":"1011011011110000","title_slug":"implement-stack-using-queues"}