{"id":729926800,"lang":"java","time":"1 month, 3 weeks","timestamp":1656053897,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/729926800/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"42.1 MB","code":"class MyStack {\n    Queue<Integer> q;\n    int top;\n    public MyStack() {\n        q=new LinkedList<Integer>();\n    }    \n    public void push(int x) {\n        q.add(x);\n        top = x;\n    }  \n    public int pop() {\n        Queue<Integer> p = new LinkedList<>();\n        while(q.size()>1){\n            p.add((int)q.poll());\n        }\n        int w = q.poll();\n        q = p;\n        return w;\n        \n    }\n    \n    public int top() {\n        Queue<Integer> q2 = new LinkedList<>();\n        while(q.size()>1){\n            q2.add((int)q.poll());\n        }\n        int a= q.poll();\n        q2.add(a);\n        q = q2;\n        return a;\n    }\n    \n    public boolean empty() {\n        if(q.size()==0)\n            return true;\n        return false;\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111","title_slug":"implement-stack-using-queues"}