{"id":659061090,"lang":"java","time":"5 months, 1 week","timestamp":1647163731,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/659061090/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"269.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode deleteMiddle(ListNode head) {\n        ArrayList<Integer> al=new ArrayList<Integer>();\n        if(head==null)  return null;\n        if(head.next==null) return null;\n        while(head!=null){\n            al.add(head.val);\n            head=head.next;\n        }\n        ListNode sol=new ListNode(0);\n        ListNode temp=sol;\n        for(int i=0;i<al.size();i++){\n            if(i!=(al.size()/2)){\n                sol.next= new ListNode((int)al.get(i));    \n                sol=sol.next;\n            }\n        }\n        return temp.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list"}