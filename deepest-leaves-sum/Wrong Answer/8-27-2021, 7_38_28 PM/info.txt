{"id":545126170,"lang":"java","time":"11 months, 3 weeks","timestamp":1630073308,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/545126170/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int v=0;\n    public int sum=0;\n    public int maxlevel=-1;\n    public int deepestLeavesSum(TreeNode root) {\n        traverse(root,0);\n        return sum;\n        \n    }\n    public void traverse(TreeNode node, int level){\n        if(node==null)\n            return;\n        traverse(node.left,level+1);\n        traverse(node.right,level+1);\n        if(level>=maxlevel){\n            sum=sum+node.val;\n            maxlevel=level;\n        }\n    }   \n}","compare_result":"110100000000000","title_slug":"deepest-leaves-sum"}