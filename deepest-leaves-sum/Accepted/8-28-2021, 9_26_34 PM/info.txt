{"id":545645006,"lang":"java","time":"11 months, 3 weeks","timestamp":1630166194,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/545645006/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"48.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int v=0;\n    public int sum=0;\n    public int maxlevel=-1;\n    public int deepestLeavesSum(TreeNode root) {\n        findMax(root,0);\n        traverse(root,0,maxlevel);\n        return sum;     \n    }\n    public void findMax(TreeNode node, int level){\n        if(node==null)\n            return;\n        findMax(node.left,level+1);\n        findMax(node.right,level+1);\n        if(level>=maxlevel)\n            maxlevel=level;\n    }\n    public void traverse(TreeNode node, int level, int maxlevel){\n        if(node==null)\n            return;\n        traverse(node.left,level+1, maxlevel);\n        traverse(node.right,level+1, maxlevel);\n        if(level==maxlevel && node.left==null && node.right==null){\n            sum=sum+node.val;\n            maxlevel=level;\n        }\n    }   \n}","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}