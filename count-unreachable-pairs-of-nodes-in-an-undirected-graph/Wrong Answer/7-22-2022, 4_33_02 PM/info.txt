{"id":753668591,"lang":"java","time":"3 weeks, 6 days","timestamp":1658487782,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/753668591/","is_pending":"Not Pending","title":"Count Unreachable Pairs of Nodes in an Undirected Graph","memory":"N/A","code":"class Solution {\n    List<List<Integer>> base = new ArrayList();\n    public long countPairs(int n, int[][] edges) {\n        boolean[] visited = new boolean[n+1];\n        Arrays.fill(visited,false);\n        for(int i=0;i<n;++i)    base.add(new ArrayList<>());\n        for(int j=0;j<edges.length;++j){\n            base.get(edges[j][0]).add(edges[j][1]);\n            base.get(edges[j][1]).add(edges[j][0]);\n        }\n        long sol = 0;\n        int sum = n;\n        for(int k=0;k<n;++k)\n            if(!visited[k]){\n                int curr = dfs(k,visited, new int[1]);\n                sum = sum-curr;\n                sol += (curr*sum);\n            }\n        return sol;\n    }\n    int dfs(int i, boolean[] visited, int[] c){\n        if(visited[i])  return c[0];\n        visited[i] = true;\n        c[0]++;\n        for(int curr : base.get(i))     dfs(curr, visited, c);\n        return c[0];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111011111111","title_slug":"count-unreachable-pairs-of-nodes-in-an-undirected-graph"}