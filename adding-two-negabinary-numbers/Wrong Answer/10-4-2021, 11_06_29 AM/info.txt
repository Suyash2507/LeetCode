{"id":565470252,"lang":"java","time":"10 months, 2 weeks","timestamp":1633325789,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/565470252/","is_pending":"Not Pending","title":"Adding Two Negabinary Numbers","memory":"N/A","code":"class Solution {\n    public int[] addNegabinary(int[] arr1, int[] arr2) {\n        if(arr1.length==1 && arr1[0]==0)\n            return arr2;\n        if(arr2.length==1 && arr2[0]==0)\n            return arr1;\n        int maxL= (arr1.length>=arr2.length)?arr1.length:arr2.length;\n        int[] ans=new int[maxL];\n        if(arr1.length==1 && arr2.length==1)\n        {\n            ans[0]= ((int)Math.pow((-2),arr1[0]) + (int)Math.pow((-2),arr2[0]));\n            return ans;\n        }\n        //for calci\n        int n1=0,n2=0,ans1=0;\n        for(int i=0;i<arr1.length;i++)\n        {\n            if(arr1[i]==1)\n            {\n                n1=n1+ (int)Math.pow((-2),i);\n            }\n        }\n        for(int j=0;j<arr2.length;j++)\n        {\n            if(arr2[j]==1)\n            {\n                n2=n2+ (int)Math.pow((-2),j);\n            }\n        }\n        ans1=ans1+n1+n2;\n        int k=maxL-1;\n        while(ans1>0)\n        {\n            if(ans1%2==0)\n            {\n                ans[k]=0;\n            }\n            else\n            {\n                ans[k]=1;\n            }\n            ans1=ans1/2;\n            k--;\n        }\n        return ans;\n    }\n}","compare_result":"111111111111111111000000100000000100000000000000010000100000000001000000000000000100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"adding-two-negabinary-numbers"}