{"id":676740598,"lang":"java","time":"4 months, 1 week","timestamp":1649478892,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/676740598/","is_pending":"Not Pending","title":"Find Players With Zero or One Losses","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> findWinners(int[][] matches) {\n        TreeSet<Integer> sol1=new TreeSet<Integer>();\n        TreeSet<Integer> sol2=new TreeSet<Integer>();\n        List<List<Integer>> sol=new ArrayList<List<Integer>>();\n        List<Integer> temp=new ArrayList<Integer>();\n        List<Integer> temp2=new ArrayList<Integer>();\n        for(int i=0;i<matches.length;i++){\n            if(!sol1.contains(matches[i][0]))   sol1.add(matches[i][0]);\n            if(!sol2.contains(matches[i][1]) && !temp.contains(matches[i][1]))   sol2.add(matches[i][1]);\n            else{\n                if(sol2.contains(matches[i][1]))   sol2.remove(new Integer(matches[i][1]));\n                if(!temp.contains(matches[i][1]))   temp.add(matches[i][1]);\n            }\n            if(!temp2.contains(matches[i][1]))  temp2.add(matches[i][1]);\n        }\n        sol1.removeAll(temp2);\n        List<Integer> l1= new ArrayList<Integer>(sol1);\n        List<Integer> l2= new ArrayList<Integer>(sol2);\n        sol.add(l1);\n        sol.add(l2);\n        return sol;\n \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000","title_slug":"find-players-with-zero-or-one-losses"}