{"id":628118201,"lang":"java","time":"6 months, 3 weeks","timestamp":1643183666,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/628118201/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"85.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> al;\n    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {\n        al=new ArrayList();\n        traverse(root1);\n        traverse(root2);\n        Collections.sort(al);\n        return al;\n    }\n    public void traverse(TreeNode tr){\n        if(tr==null)\n            return;\n        al.add(tr.val);\n        traverse(tr.left);\n        traverse(tr.right);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}