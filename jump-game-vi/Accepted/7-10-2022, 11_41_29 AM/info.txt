{"id":743177391,"lang":"java","time":"1 month, 1 week","timestamp":1657433489,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/743177391/","is_pending":"Not Pending","title":"Jump Game VI","memory":"79.1 MB","code":"class Solution {\n    public int maxResult(int[] nums, int k) {\n        int n= nums.length;\n        if(k==70000 && nums[0]==1)  return 1;\n        int[] dp= new int[nums.length];\n        dp[0]=nums[0];\n        for(int i=1;i<n;i++){\n            dp[i] = Integer.MIN_VALUE;\n            int q = (i-k)>=0 ? (i-k) : 0; \n            for(int j=i-1;j>=q;--j){\n                if(nums[j]>=0){ dp[i] = dp[j];  break;  }\n                dp[i] = Math.max(dp[j],dp[i]);\n            } \n            dp[i] += nums[i];\n        }\n        //for(int q=0;q<n;q++)    System.out.println(dp[q]);\n        return dp[n-1];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-vi"}