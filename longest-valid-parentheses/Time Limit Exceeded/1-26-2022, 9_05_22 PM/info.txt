{"id":628326075,"lang":"java","time":"6 months, 3 weeks","timestamp":1643211322,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/628326075/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"N/A","code":"public class Solution {\n    public boolean isValid(String s) {\n        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == '(') {\n                stack.push('(');\n            } else if (!stack.empty() && stack.peek() == '(') {\n                stack.pop();\n            } else {\n                return false;\n            }\n        }\n        return stack.empty();\n    }\n    public int longestValidParentheses(String s) {\n        int maxlen = 0;\n        for (int i = 0; i < s.length(); i++) {\n            for (int j = i; j <= s.length(); j+=2) {\n                if (isValid(s.substring(i, j))) {\n                    maxlen = Math.max(maxlen, j - i);\n                }\n            }\n        }\n        return maxlen;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000","title_slug":"longest-valid-parentheses"}