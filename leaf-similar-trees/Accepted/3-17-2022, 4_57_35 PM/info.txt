{"id":661777026,"lang":"java","time":"5Â months","timestamp":1647516455,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/661777026/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"42.1 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    ArrayList<Integer> al1=new ArrayList<Integer>();\n    ArrayList<Integer> al2=new ArrayList<Integer>();\n    public boolean leafSimilar(TreeNode root1, TreeNode root2) {\n        traverse1(root1);\n        traverse2(root2);\n        return al1.equals(al2);\n    }\n    void traverse1(TreeNode head){\n        if(head==null)  return;\n        if(head.left==null && head.right==null){\n            al1.add(head.val);\n        }\n        traverse1(head.left);\n        traverse1(head.right);\n    }\n    void traverse2(TreeNode head){\n        if(head==null)  return;\n        if(head.left==null && head.right==null){\n            al2.add(head.val);\n        }\n        traverse2(head.left);\n        traverse2(head.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees"}