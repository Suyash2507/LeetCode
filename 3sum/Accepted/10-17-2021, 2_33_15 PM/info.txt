{"id":572575148,"lang":"java","time":"10Â months","timestamp":1634461395,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/572575148/","is_pending":"Not Pending","title":"3Sum","memory":"42.9 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        List<List<Integer>> res = new ArrayList<>();\n        Arrays.sort(nums);\n        for (int i = 0; i + 2 < nums.length; i++) {\n            if (i > 0 && nums[i] == nums[i - 1]) {              // skip same result\n                continue;\n            }\n            int j = i + 1, k = nums.length - 1;  \n            int target = -nums[i];\n            while (j < k) {\n                if (nums[j] + nums[k] == target) {\n                    res.add(Arrays.asList(nums[i], nums[j], nums[k]));\n                    j++;\n                    k--;\n                    while (j < k && nums[j] == nums[j - 1]) j++;  // skip same result\n                    while (j < k && nums[k] == nums[k + 1]) k--;  // skip same result\n                } else if (nums[j] + nums[k] > target) {\n                    k--;\n                } else {\n                    j++;\n                }\n            }\n        }\n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}