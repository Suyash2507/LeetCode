{"id":730222265,"lang":"java","time":"1 month, 3 weeks","timestamp":1656086406,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/730222265/","is_pending":"Not Pending","title":"Construct Target Array With Multiple Sums","memory":"57.6 MB","code":"class Solution {\n    public boolean isPossible(int[] A) {\n        PriorityQueue<Integer> pq = new PriorityQueue<Integer>((a, b) -> (b - a));\n        long total = 0;\n        for (int a : A) {\n            total += a;\n            pq.add(a);\n        }\n        while (true) {\n            int a = pq.poll();\n            total -= a;\n            if (a == 1 || total == 1)\n                return true;\n            if (a < total || total == 0 || a % total == 0)\n                return false;\n            a %= total;\n            total += a;\n            pq.add(a);\n        }\n        /*int max=0,index=0;\n        for(int q=0;q<target.length;q++){\n            if(target[q]>max){\n                max = target[q];\n                index = q;\n            }\n        }\n        if(max==1)    return true;\n        for(int i=0;i<target.length;i++){\n            if(i!=index){\n                max = max % 1000000000;\n                max = max - target[i];\n                if(max<=0)  return false;\n            }\n        }\n        target[index] = max ; \n        return isPossible(target);\n        */\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-target-array-with-multiple-sums"}