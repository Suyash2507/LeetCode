{"id":628938513,"lang":"java","time":"6 months, 3 weeks","timestamp":1643288376,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/628938513/","is_pending":"Not Pending","title":"Arithmetic Subarrays","memory":"54.5 MB","code":"class Solution {\n    public List<Boolean> checkArithmeticSubarrays(int[] nums, int[] l, int[] r) {\n        List<Boolean> ll =new ArrayList<Boolean>();\n        for(int i=0;i<l.length;i++){\n            int[] temp= new int[1+(r[i]-l[i])];\n            int z=0;\n            for(int j=l[i];j<=r[i];j++){\n                temp[z++]=nums[j];\n            }\n            Arrays.sort(temp);\n            if(temp.length<2){\n                ll.add(false);\n                continue;\n            }\n            boolean res=false;\n            int diff= temp[1]-temp[0];\n            for(int k=0;k<temp.length-1;k++){\n                if((temp[k+1]-temp[k])!=diff){\n                    res=true;\n                    break;\n                }\n            }\n            if(res){\n                ll.add(false);\n                continue;\n            }\n            ll.add(true);\n        }\n        return ll;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-subarrays"}