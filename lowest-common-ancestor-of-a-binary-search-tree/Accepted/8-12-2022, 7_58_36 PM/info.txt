{"id":771931529,"lang":"java","time":"6 days, 17 hours","timestamp":1660314516,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/771931529/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"49.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root.val > p.val && root.val > q.val)\n            return lowestCommonAncestor(root.left, p, q);\n        else if(root.val < p.val && root.val < q.val)\n            return lowestCommonAncestor(root.right, p, q);\n        else\n            return root;\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}