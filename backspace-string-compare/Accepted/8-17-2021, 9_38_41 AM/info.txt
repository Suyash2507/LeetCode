{"id":539697717,"lang":"java","time":"1Â year","timestamp":1629173321,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/539697717/","is_pending":"Not Pending","title":"Backspace String Compare","memory":"37.6 MB","code":"class Solution {\n    public boolean backspaceCompare(String s, String t) {\n        Stack<Character> stack1= new Stack<Character>();\n        Stack<Character> stack2= new Stack<Character>();\n        int i=0,j=0;\n        String sol1=\"\",sol2=\"\";\n        for(i=0;i<s.length();i++)\n        {\n            if(s.charAt(i)=='#')\n            {\n                if(!stack1.empty())\n                {\n                    stack1.pop();\n                }\n            }\n            else\n            {\n                stack1.push(s.charAt(i));\n            }\n        }\n        for(j=0;j<t.length();j++)\n        {\n            if(t.charAt(j)=='#')\n            {\n                if(!stack2.empty())\n                {\n                    stack2.pop();\n                }\n            }\n            else\n            {\n                stack2.push(t.charAt(j));\n            }\n        }\n        while(!stack1.empty())\n        {\n            char l= stack1.pop();\n            sol1=sol1.concat(String.valueOf(l));\n        }\n        while(!stack2.empty())\n        {\n            char p= stack2.pop();\n            sol2=sol2.concat(String.valueOf(p));\n        }\n        if(sol1.equals(sol2))\n            return true;\n        else\n            return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"backspace-string-compare"}