{"id":721850264,"lang":"java","time":"2Â months","timestamp":1655188386,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/721850264/","is_pending":"Not Pending","title":"Is Subsequence","memory":"N/A","code":"class Solution {\n    public boolean isSubsequence(String s, String t) {\n        int m = s.length();\n        int n = t.length();\n        if(t.equals(\"\"))    return false;\n        if(s.equals(\"\"))    return true;\n        int[][] dp =new int[m+1][n+1];\n        for(int i=0;i<=m;i++){\n            for(int j=0;j<=n;j++){\n                if(i==0 || j==0)    continue;\n                if(s.charAt(i-1)==t.charAt(j-1))    dp[i][j] = 1+ dp[i-1][j-1];\n                else    dp[i][j] = Math.max(dp[i-1][j] , dp[i][j-1]);\n            }\n        }\n        return dp[m][n] == m;\n        /*if(s.length()==t.length())\n            return s.equals(t);\n        if(s.equals(\"\"))\n            return true;\n        if(t.equals(\"\")){\n            return false;\n        }\n        String min = (s.length()< t.length())? s:t;\n        String max = (s.length()>=t.length())? s:t;\n        int z=0;\n        for(int i=0;i<min.length();i++){\n            boolean f=false;\n            System.out.println(z);\n            for(int j=z;j<max.length();j++){\n                if(min.charAt(i)==max.charAt(j)){\n                    f=true;\n                    z=j;\n                    break;\n                }\n            }\n            if(!f){\n                return false;\n            }\n        }\n        return true;\n        */\n    }\n}","compare_result":"11101111111111111","title_slug":"is-subsequence"}