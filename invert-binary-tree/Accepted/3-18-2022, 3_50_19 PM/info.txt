{"id":662357321,"lang":"java","time":"5Â months","timestamp":1647598819,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/662357321/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"39.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode invertTree(TreeNode root) {\n        if(root==null)  return null;\n        traverse(root);\n        return root;\n    }\n    void traverse(TreeNode root){\n        if(root==null)  return;\n        TreeNode temp= root.left;\n        root.left= root.right;\n        root.right= temp;\n        traverse(root.left);\n        traverse(root.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}