{"id":568907168,"lang":"java","time":"10 months, 1 week","timestamp":1633881077,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/568907168/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"N/A","code":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        char[] X= text1.toCharArray();\n        char[] Y= text2.toCharArray();\n        int k=findlcs(X,Y, text1.length(),text2.length());\n        return k;\n    }\n    int findlcs(char[] X, char[] Y, int m,int n){\n        if(m==0 || n==0)\n            return 0;\n        if(X[m-1]==Y[n-1])\n            return 1 + findlcs(X,Y, m-1,n-1);\n        else\n            return Math.max(findlcs(X,Y,m-1,n), findlcs(X,Y,m,n-1));\n    }\n}","compare_result":"11111111111111111100000000000000000000000000","title_slug":"longest-common-subsequence"}