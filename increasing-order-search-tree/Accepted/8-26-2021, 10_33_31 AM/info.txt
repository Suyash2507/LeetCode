{"id":544379305,"lang":"java","time":"11 months, 4 weeks","timestamp":1629954211,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/544379305/","is_pending":"Not Pending","title":"Increasing Order Search Tree","memory":"38.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    TreeNode temp;\n    public TreeNode increasingBST(TreeNode root) {\n        if(root==null)\n            return null;\n        TreeNode curr = new TreeNode(0);\n\t\ttemp= curr;\n\t\tTraverse(root);\n        return curr.right;\n    }\n    public void Traverse(TreeNode root) {\n        if(root==null)\n            return;\n        Traverse(root.left);\n        temp.right = new TreeNode(root.val);\n        temp=temp.right;\n        Traverse(root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"increasing-order-search-tree"}