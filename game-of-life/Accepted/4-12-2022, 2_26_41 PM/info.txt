{"id":678877789,"lang":"java","time":"4 months, 1 week","timestamp":1649753801,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/678877789/","is_pending":"Not Pending","title":"Game of Life","memory":"42.8 MB","code":"public class Solution {\n    public void gameOfLife(int[][] board) {\n        int m = board.length, n = board[0].length;\n        int[][] result = new int[m][n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                int countLive = 0;\n                for (int p = Math.max(i-1,0); p < Math.min(i+2,m); p++) {\n                    for (int q = Math.max(j-1,0); q < Math.min(j+2,n); q++) {\n                        if (board[p][q]==2||board[p][q]==1) countLive++;\n                    }\n                }\n                countLive -= board[i][j];\n                if (board[i][j] == 0 && countLive == 3) board[i][j] = 3;\n                if (board[i][j] == 1 && (countLive < 2 || countLive > 3)) board[i][j] = 2; \n                \n            }\n        }\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                board[i][j] %= 2;\n            }\n        }\n    }\n}\n/*class Solution {\n    public void gameOfLife(int[][] board) {\n        int b[][] = board.clone();\n        for(int i=0;i<board.length;i++){\n            for(int j=0;j<board[i].length;j++){\n                int l=0,z=0;\n                if((i-1)>=0){\n                        if(b[i-1][j]==1)    l++;\n                        else    z++;\n                        if((j-1)>=0){\n                            if(b[i-1][j-1]==1)  l++;\n                            else    z++;\n                        }\n                        if((j+1)<b[i].length){\n                            if(b[i-1][j+1]==1)  l++;\n                            else    z++;\n                        }\n                    }\n                    if((i+1)<b.length){\n                        if(b[i+1][j]==1)    l++;\n                        else    z++;\n                        if((j-1)>=0){\n                            if(b[i+1][j-1]==1)  l++;\n                            else    z++;\n                        }\n                        if((j+1)<b[i].length){\n                            if(b[i+1][j+1]==1)  l++;\n                            else    z++;\n                        }\n                    }\n                    if((j-1)>=0){\n                        if(b[i][j-1]==1)    l++;\n                        else z++;\n                    }\n                    if((j+1)<b[i].length){\n                        if(b[i][j+1]==1)    l++;\n                        else    z++;\n                    }\n                if(board[i][j]==1){\n                    if(l<2){\n                        board[i][j]=0;\n                    }\n                    else if(l>3){\n                        board[i][j]=0;\n                    }\n                }\n                else{\n                    if(l==3){\n                        board[i][j]=1;\n                    }\n                }\n                System.out.println(l+\"  \"+z);\n            }\n        }\n    }\n        findsol(board,0,0);\n    }\n    public void findsol(int[][] board,int i,int j){\n        if(i<0 || j>=board.length || i>=board.length || j<0)    return;\n        if(board[i][j]==1){\n            \n        }\n        findsol(board,i+1,j);\n        findsol(board,i-1,j);\n        findsol(board,i,j+1);\n        findsol(board,i,j-1);\n        findsol(board,i+1,j+1);\n        findsol(board,i+1,j-1);\n        findsol(board,i-1,j+1);\n        findsol(board,i-1,j-1);\n    }\n}\n*/","compare_result":"1111111111111111111111","title_slug":"game-of-life"}