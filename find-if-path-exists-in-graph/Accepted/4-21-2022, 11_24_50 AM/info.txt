{"id":684610396,"lang":"java","time":"4Â months","timestamp":1650520490,"status_display":"Accepted","runtime":"347 ms","url":"/submissions/detail/684610396/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"233 MB","code":"class Solution {\n    boolean found=false;\n    public boolean validPath(int n, int[][] edges, int start, int end) {\n        HashMap<Integer,List<Integer>> hm=new HashMap();\n        if(start==end)  return true;\n        boolean[] visited =new boolean[n];\n        for(int i=0;i<n;i++){\n            hm.put(i, new ArrayList());\n        }\n        for(int[] edge : edges){\n           hm.get(edge[0]).add(edge[1]);\n           hm.get(edge[1]).add(edge[0]);\n        }\n        dfs(hm,visited,start,end);\n        return found;\n    }\n    public void dfs(Map<Integer,List<Integer>> hm,boolean[] visited, int start, int end){\n        if(visited[start] || found) return;\n        visited[start]=true;\n        for(int a: hm.get(start)){\n            if(a==end){\n                found=true;\n                break;\n            }\n            if(!visited[a]) dfs(hm,visited,a,end);\n        }\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"find-if-path-exists-in-graph"}