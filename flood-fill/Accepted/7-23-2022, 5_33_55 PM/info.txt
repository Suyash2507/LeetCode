{"id":754450519,"lang":"java","time":"3 weeks, 5 days","timestamp":1658577835,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/754450519/","is_pending":"Not Pending","title":"Flood Fill","memory":"43.2 MB","code":"class Solution {\n    void traverse(int[][] grid, int sr, int sc, int nc, int old){\n        if(grid[sr][sc]==old){\n            grid[sr][sc] = nc;\n            if(sr-1>=0)   traverse(grid,sr-1,sc,nc,old);\n            if(sc-1>=0)   traverse(grid,sr,sc-1,nc,old);\n            if(sr+1<grid.length)   traverse(grid,sr+1,sc,nc,old);\n            if(sc+1<grid[0].length)   traverse(grid,sr,sc+1,nc,old);\n        }\n    }\n    public int[][] floodFill(int[][] grid, int sr, int sc, int newColor) {\n        if(grid[sr][sc] == newColor)  return grid;\n        traverse(grid,sr,sc,newColor,grid[sr][sc]);\n        return grid;\n    }\n    /*\n        for(int i=0;i<grid.length;i++){\n            for(int j=0;j<grid[i].length;j++){\n                if(i==sr && j==sc){\n                    check(grid,i,j,newColor);\n                }\n            }\n        }\n        return grid;\n    }\n    public void check(int[][] grid,int i,int j, int nc){\n        if(i<0 || i>=grid.length || j<0 || j>=grid[i].length || grid[i][j]=='0'){\n            return ;\n        }\n        grid[i][j]=nc;\n        check(grid,i+1,j,nc);\n        check(grid,i,j+1,nc);\n        check(grid,i-1,j,nc);\n        check(grid,i,j-1,nc);\n    }\n    */\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill"}