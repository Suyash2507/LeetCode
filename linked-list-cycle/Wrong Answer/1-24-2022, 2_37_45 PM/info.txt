{"id":626670194,"lang":"java","time":"6 months, 3 weeks","timestamp":1643015265,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/626670194/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ArrayList<Integer> al=new ArrayList<Integer>();\n        while(head!=null){\n            if(!al.contains(head.val)){\n                al.add(head.val);\n            }\n            else{\n                return true;\n            }\n            head=head.next;\n        }\n        return false;\n    }\n}","compare_result":"111111111101110111010","title_slug":"linked-list-cycle"}