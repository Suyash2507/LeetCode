{"id":636291312,"lang":"java","time":"6 months, 1 week","timestamp":1644218978,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/636291312/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"45.5 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode slow = head, fast = head;\n          while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n\n            if (slow == fast) \n                return true;\n          }\n\n          return false;\n    }\n}","compare_result":"111111111111111111111","title_slug":"linked-list-cycle"}