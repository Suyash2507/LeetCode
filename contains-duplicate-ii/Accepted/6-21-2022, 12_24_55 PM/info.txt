{"id":727396708,"lang":"java","time":"1 month, 4 weeks","timestamp":1655794495,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/727396708/","is_pending":"Not Pending","title":"Contains Duplicate II","memory":"96 MB","code":"class Solution {\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\n        Map<Integer, Integer> map = new HashMap<Integer, Integer>();\n        for (int i = 0; i < nums.length; i++) {\n            if (map.containsKey(nums[i])) {\n                if (i - map.get(nums[i]) <= k) return true;\n            }\n            map.put(nums[i], i);\n        }\n        return false;\n        /*if(nums.length==1)  return false;\n        int i = 0, j = 1;\n        while(j<nums.length && i<nums.length-1){\n            if(nums[i]!=nums[j])    j++;\n            else{\n                //System.out.println(Math.abs(i-j));\n                if(Math.abs(i-j)<=k){       return true;}\n                else{i++;   j=i+1;}\n            }\n            if(j==nums.length-1 && nums[i]!=nums[j] && Math.abs(i-j)>k){\n                i+=1;\n                j=i+1;\n            }\n        }\n        return false;\n        */\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"contains-duplicate-ii"}