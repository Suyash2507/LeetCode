{"id":768520765,"lang":"java","time":"1 week, 3 days","timestamp":1659973284,"status_display":"Accepted","runtime":"78 ms","url":"/submissions/detail/768520765/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"43.9 MB","code":"class Solution {\n    public int lengthOfLIS(int[] nums) {\n        int n = nums.length;\n        int[] dp = new int[n];\n        Arrays.fill(dp, 1);\n        int max = 1;\n        for(int i=1; i < n; i++){\n            for(int j=0; j <= i-1; j++){\n                if(nums[i] > nums[j])\n                    //System.out.println(\"\");\n                    dp[i] = Math.max(dp[i], 1 + dp[j]);\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}