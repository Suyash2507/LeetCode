{"id":571096267,"lang":"java","time":"10 months, 1 week","timestamp":1634213709,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/571096267/","is_pending":"Not Pending","title":"Lucky Numbers in a Matrix","memory":"47 MB","code":"class Solution {\n    public List<Integer> luckyNumbers (int[][] matrix) {\n        int m = matrix.length, n = matrix[0].length;\n        int[] mi = new int[m], mx = new int[n];\n        Arrays.fill(mi, Integer.MAX_VALUE);\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                mi[i] = Math.min(matrix[i][j], mi[i]);\n                mx[j] = Math.max(matrix[i][j], mx[j]);\n            }\n        }\n        List<Integer> res = new ArrayList<>();\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < n; ++j) {\n                if (mi[i] == mx[j])  {\n                    res.add(mi[i]);\n                    break;           // credit to @Ausho_Roup\n                }\n            }\n        }\n        return res;        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"lucky-numbers-in-a-matrix"}