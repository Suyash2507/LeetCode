{"id":631618597,"lang":"java","time":"6 months, 2 weeks","timestamp":1643638789,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/631618597/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"44.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int v=0;\n    public int countNodes(TreeNode root) {\n        if(root==null)\n            return 0;\n        findnode(root);\n        return v;\n    }\n    public void findnode(TreeNode root){\n        if(root!=null){\n            v++;\n            findnode(root.left);\n            findnode(root.right);\n        }\n    }\n}","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}