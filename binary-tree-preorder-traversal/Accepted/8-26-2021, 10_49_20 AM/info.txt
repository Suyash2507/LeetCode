{"id":544386841,"lang":"java","time":"11 months, 4 weeks","timestamp":1629955160,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/544386841/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    ArrayList<Integer> ll;\n    public List<Integer> preorderTraversal(TreeNode root) {\n        ll=new ArrayList<Integer>();\n        if(root==null)\n            return ll;\n\t\tTraverse(root);  \n        return ll;\n    }\n    public void Traverse(TreeNode root) {\n        if(root==null)\n            return;\n        ll.add(root.val);\n        Traverse(root.left);\n        Traverse(root.right);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}