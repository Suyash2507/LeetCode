{"id":729929886,"lang":"java","time":"1 month, 3 weeks","timestamp":1656054192,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/729929886/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"39.9 MB","code":"class MyQueue {\n    Stack<Integer> s;\n    public MyQueue() {\n        s=new Stack<Integer>();\n    }\n    public void push(int x) {\n        s.push(x);\n    }\n    public int pop() {\n        Stack b= new Stack<>(); \n        while(s.size()>1){\n            b.push((int)s.pop());\n        }    \n        int a = s.pop();\n        while(b.size()!=0){\n            s.push((int)b.pop());\n        }\n        return a;\n    }\n    \n    public int peek() {\n        Stack b= new Stack<>(); \n        while(s.size()>1){\n            b.push((int)s.pop());\n        }    \n        int a = s.pop();\n        b.push(a);\n        while(b.size()!=0){\n            s.push((int)b.pop());\n        }\n        return a;\n    }\n    \n    public boolean empty() {\n        return s.size()==0;\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks"}