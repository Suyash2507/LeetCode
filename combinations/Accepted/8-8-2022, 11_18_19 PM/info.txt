{"id":768623221,"lang":"java","time":"1 week, 3 days","timestamp":1659980899,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/768623221/","is_pending":"Not Pending","title":"Combinations","memory":"54.7 MB","code":"class Solution {\n    List<List<Integer>> sol;\n    public List<List<Integer>> combine(int n, int k) {\n        sol = new ArrayList();\n        int[] arr = new int[n];\n        for(int i=0;i<n;++i)    arr[i] = i+1;\n        int[] data = new int[k];\n        comb(arr,data,0,n-1,0,k);\n        return sol;\n    }\n    void comb(int arr[], int data[], int start, int end, int index, int r){\n        if (index == r){\n            List<Integer> temp = new ArrayList();\n            for(int j=0; j<r; j++)\n                temp.add(data[j]);\n            sol.add(temp);\n            return;\n        }\n        for (int i=start; i<=end && end-i+1 >= r-index; i++){\n            data[index] = arr[i];\n            comb(arr, data, i+1, end, index+1, r);\n        }\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"combinations"}