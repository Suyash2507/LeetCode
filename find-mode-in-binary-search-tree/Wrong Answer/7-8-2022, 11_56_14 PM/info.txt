{"id":741975309,"lang":"java","time":"1 month, 1 week","timestamp":1657304774,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/741975309/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();\n    public int[] findMode(TreeNode root) {\n        traverse(root);\n        int ans = Integer.MIN_VALUE, k = 0;\n        for (Map.Entry e : hm.entrySet()) {\n            if((int)e.getValue()>ans){   ans = (int)e.getValue();    k =(int)e.getKey();}\n        }\n        return new int[]{k};\n    }\n    void traverse(TreeNode root){\n        if(root==null)  return;\n        if(hm.get(root.val)!=null){\n            hm.put(root.val,(int)hm.get(root.val)+1);\n        }\n        else{\n            hm.put(root.val,1);\n        }\n        traverse(root.left);\n        traverse(root.right);\n    }\n}","compare_result":"11001011011110100111011","title_slug":"find-mode-in-binary-search-tree"}